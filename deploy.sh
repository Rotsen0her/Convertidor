#!/bin/bash
# Script de actualizaci√≥n r√°pida para aplicaci√≥n desplegada
set -e  # Salir si hay error

echo "ÔøΩ Actualizando Convertidor..."

# Backup de archivos cr√≠ticos antes del pull
echo "üíæ Backup de configuraci√≥n..."
[ -f "nginx/default.conf" ] && cp nginx/default.conf nginx/default.conf.backup
[ -f ".env" ] && cp .env .env.backup

# Actualizar c√≥digo desde GitHub
echo "üì• Obteniendo cambios desde GitHub..."
git stash  # Guardar cambios locales temporalmente
git pull origin main
git stash pop 2>/dev/null || echo "‚úì Sin cambios locales"

# Compilar Tailwind CSS solo si hay cambios en frontend
if git diff HEAD@{1} --name-only | grep -qE "(tailwind|\.css|templates/)"; then
    echo "üé® Compilando Tailwind CSS..."
    npm run build:css
else
    echo "‚è≠Ô∏è  CSS sin cambios"
fi

# Reiniciar solo contenedores necesarios (sin rebuild completo)
echo "ÔøΩ Reiniciando servicios..."

# Detectar qu√© cambi√≥ para reiniciar solo lo necesario
BACKEND_CHANGED=$(git diff HEAD@{1} --name-only | grep -E "^backend/" || true)
NGINX_CHANGED=$(git diff HEAD@{1} --name-only | grep -E "^nginx/" || true)

if [ -n "$BACKEND_CHANGED" ]; then
    echo "   ‚Üª Backend modificado, reiniciando..."
    docker compose restart backend
else
    echo "   ‚úì Backend sin cambios"
fi

if [ -n "$NGINX_CHANGED" ]; then
    echo "   ‚Üª Nginx modificado, reiniciando..."
    
    # Restaurar SSL si se sobrescribi√≥
    if [ -f "nginx/default.conf.backup" ]; then
        if ! grep -q "ssl_certificate" nginx/default.conf; then
            echo "   ‚ö†Ô∏è  Restaurando config SSL..."
            mv nginx/default.conf.backup nginx/default.conf
        fi
    fi
    
    docker compose restart nginx
else
    echo "   ‚úì Nginx sin cambios"
fi

# Limpiar backups si todo est√° bien
[ -f "nginx/default.conf.backup" ] && rm -f nginx/default.conf.backup
[ -f ".env.backup" ] && rm -f .env.backup

echo ""
echo "‚úÖ Actualizaci√≥n completada!"
echo "üìä Estado de servicios:"
docker compose ps

echo ""
echo "üåê Aplicaci√≥n: https://luziia.cloud"
echo "üîç Ver logs: docker compose logs -f backend"
